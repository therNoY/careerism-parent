mongo

基础概念

database	database	数据库
table		collection	数据库表/集合
row		document	数据记录行/文档
column		field		数据字段/域
index		index		索引
table joins	 		表连接,MongoDB不支持
primary key	primary key	主键,MongoDB自动将_id字段设置为主键

一个mongodb中可以建立多个数据库。
MongoDB的默认数据库为"db"，该数据库存储在data目录中。
MongoDB的单个实例可以容纳多个独立的数据库，每一个都有自己的集合和权限，不同的数据库也放置在不同的文件中

集合

有一些数据库名是保留的，可以直接访问这些有特殊作用的数据库。
admin： 从权限的角度来看，这是"root"数据库。要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限。
一些特定的服务器端命令也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器。
local:  这个数据永远不会被复制，可以用来存储限于本地单台服务器的任意集合
config: 当Mongo用于分片设置时，config数据库在内部使用，用于保存分片的相关信息。

文档(Document)
文档是一组键值(key-value)对(即 BSON)。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 MongoDB 非常突出的特点。
一个简单的文档例子如下：
{"site":"www.runoob.com", "name":"菜鸟教程"}
文档中的键/值对是有序的，
MongoDB区分类型和大小写。
MongoDB的文档不能有重复的键。
文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。


MongoDB 数据类型
下表为MongoDB中常用的几种数据类型。

数据类型	描述
String		字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。
Integer		整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。
Boolean		布尔值。用于存储布尔值（真/假）。
Double		双精度浮点值。用于存储浮点值。
Min/Max keys	将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。
Array		用于将数组或列表或多个值存储为一个键。
Timestamp	时间戳。记录文档修改或添加的具体时间。
Object		用于内嵌文档。
Null		用于创建空值。
Symbol		符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。
Date		日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。
Object ID	对象 ID。用于创建文档的 ID。
Binary Data	二进制数据。用于存储二进制数据。
Code		代码类型。用于在文档中存储 JavaScript 代码。
Regular expression	正则表达式类型。用于存储正则表达式。


ObjectId
ObjectId 类似唯一主键，可以很快的去生成和排序，包含 12 bytes，含义是：

前 4 个字节表示创建 unix 时间戳,格林尼治时间 UTC 时间，比北京时间晚了 8 个小时
接下来的 3 个字节是机器标识码
紧接的两个字节由进程 id 组成 PID
最后三个字节是随机数


db.createUser({ user:'admin',pwd:'123456',roles:[ { role:'userAdminAnyDatabase', db: 'admin'},"readWriteAnyDatabase"]});

mongo shell
查看所有的数据库 show dbs;
查看当前的库 db;
使用其他的库 use <db名字>;
删除当前库 db.dropDatabase();
删除当前库的某个集合 db.<集合名字>.drop()

集合操做
增

向当前库的某个集合插入数据 db.<集合名字>.insert(<BSON>)

改

对某个文档进行更新（替换原来的文档）  db.<集合名字>.save(<BSON>) ("需要指定_id")
批量对文档进行更新 db.<集合>.update("<匹配模式>","<$set:{"替换的内容"}>", {multi:<是否全部替换>})
例如：对title是MongoDB 教程的文档进行更新 设置likes的数量是100 只更改一个
db.ae.update({'title':'MongoDB 教程'},{$set:{'likes':'100'}},{multi:false})

删除

删除符合条件的db
db.ae.remove({"uuid":"111"})

查
基本用法 query表示查询的条件 projection表示显示的列 pretty表示是否美化
db.<集合名字>.find([query], [projection])[.pretty()]




db.ae.insert({
    title: 'MongoDB 教程', 
    description: 'W3C 上 MongoDB 是一个 Nosql 数据库',
    by: 'W3C',
    url: 'http://www.W3C.runoob.com',
    tags: ['mongodb', 'database', 'NoSQL'],
    likes: 100
})

db 用户管理

角色：
Read                允许用户读取指定数据库

readWrite           允许用户读写指定数据库

dbAdmin             允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile

userAdmin           允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户

clusterAdmin        只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。

readAnyDatabase     只在admin数据库中可用，赋予用户所有数据库的读权限

readWriteAnyDatabase只在admin数据库中可用，赋予用户所有数据库的读写权限

userAdminAnyDatabase只在admin数据库中可用，赋予用户所有数据库的userAdmin权限

dbAdminAnyDatabase  只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。

root                只在admin数据库中可用。超级账号，超级权限
