package pers.mihao.careerism.java.jvm.ClassLoader;

/*
* 类加载的过程包括 加载->验证->准备->解析->初始化->使用；
*
* 1. 加载：将外部的class文件以二进制流的方式加载到java虚拟机中 方法区；
*    1) 通过类的全限定名获取二进制流
*    2) 将静态资源转成运行时数据
*    3) 在内存中生成一个该class的Class对象
*    注意：这个class文件并不一定是文件，也有可能是压缩包，网络资源，其他文件生成
*         如果该类是数组类，则通过java虚拟机直接创建，不通过类加载
*
* 2. 验证：为了防止加载到恶意修改二进制流的class文件需要进行校验 确保安全
*    1) 验证文件格式 魔数 版本。。
*    2) 元数据验证 语义方面 该类是否有父类，是否继承了final类等
*    3) 字节码验证 保证操作数栈正确 保证类型转换正确
*    4) 符号引用验证 保证类中引用的其他类型存在， 保证不存在无效的权限访问
*
* 3. 准备：为类变量初始化内存（跟随类对象）初始化值
*    1) 为类变量初始化内存（跟随类对象）
*    2) 初始化值
*    注意：初始化的值不是开发定义的 而是系统定义的 开发定义的在初始化类的<clinit>执行
*         如果类变量是个常量 直接分配地址 并初始化值
*
* 4. 解析：将常量池中的符号引用转成直接引用
*    1) 解析对象包括 类/接口 方法 对象
*
* 5. 初始化：初始化类变量和静态代码块 按顺序
*    1) 生成<clinit> 合并静态变量和静态代码块成一个方法 顺序等于定义的顺序
*    2) 运行<clinit>
*    注意：运行子类的<clinit>会首先调用分类的<clinit> 但不会显示调用 所以第一个是object<clinit>
          <clinit>并不是必须的，如果没有静态变量和静态块可以不用 接口也有<clinit> 但是必须和类不同不需要先执行父接口的<clinit>
* */